name: Build and Package

on:
  push:
    branches:
      - main

jobs:

  build-linux:
    name: Build on Linux - ${{ matrix.arch }}
    strategy:
      matrix:
        node: ['20.10.0']
        arch: ['x64', 'arm64']
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      NODE_OPTIONS: --max_old_space_size=5120

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - name: Verify memory setting (Linux)
        run: echo $NODE_OPTIONS

      - name: Update apt and install dependencies
        run: |
          sudo apt-get install -y libx11-dev libxkbfile-dev libsecret-1-dev

      - name: Install dependencies
        run: yarn --verbose

      - name: Check installed Electron version
        run: yarn why electron

      - name: Enable debug logging
        run: echo "DEBUG=electron-builder*" >> $GITHUB_ENV

      - name: Build project
        run: yarn build:electronCICD

      - name: Packaging for Linux
        run: |
          yarn --cwd applications/electron package:cicdLinux --${{ matrix.arch }}

      - name: Cleanup artifacts (Linux)
        run: |
          npx rimraf "applications/electron/dist/!(*.deb|*.AppImage|*.dmg)"

      - name: Upload dist(Linux)
        uses: actions/upload-artifact@v3
        with:
          name: Scribe
          path: applications/electron/dist

      - name: List artifacts-Linux
        run: |
          ls -R applications/electron/dist
  # build-windows:
  #   name: Build on Windows, ${{ matrix.node }}
  #   strategy:
  #     matrix:
  #       node: ['20.x']
  #       arch: ['x86', 'x64', 'arm64']
  #   runs-on: windows-2019
  #   timeout-minutes: 60

  #   env:
  #     NODE_OPTIONS: --max_old_space_size=5120 

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Use Node.js ${{ matrix.node }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Verify memory setting (Windows)
  #       run: echo $NODE_OPTIONS

  #     - name: Install dependencies
  #       run: yarn

  #     - name: Build project
  #       run: yarn build:electronCICD

  #     - name: Packaging
  #       run: yarn --cwd applications/electron package:cicdWin --${{ matrix.arch }}

  #     - name: Cleanup artifacts Win
  #       run: |
  #         mkdir artifacts
  #         mv applications/electron/dist/*.exe artifacts

  #     - name: Upload artifacts(Windows)
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Scribe
  #         path: artifacts

  #     - name: List artifacts-Windows
  #       run: |
  #         dir artifacts
