name: Build and Package

on:
  push:
    branches:
      - main

jobs:

  build:
    name: ${{ matrix.os }}, Node.js v${{ matrix.node }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-latest]
        node: ['20.x']

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # To fetch all history for all branches and tags. (Will be required for caching with lerna: https://github.com/markuplint/markuplint/pull/111)

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - name: Use Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: set max memory allocation
        shell: bash
        run: |    
          if [[ "$RUNNER_OS" == "Windows" ]]; then      
            echo "NODE_OPTIONS=--max_old_space_size=5120" >> $GITHUB_ENV    
          else      
            export NODE_OPTIONS=--max_old_space_size=5120    
          fi

      - name: Install
        shell: bash
        run: |
          yarn --skip-integrity-check --network-timeout 100000

      - name: Build
        run: |
          yarn build:prod

      - name: Packaging
        run: |
          yarn --cwd applications/electron package:prod

      - name: Current OS
        run: |
          echo ${{matrix.os}}

      - name: Cleanup artifacts
        if: matrix.os != 'windows-2019'
        run: |
          npx rimraf "applications/electron/dist/!(*.deb|*.AppImage|*.dmg)"
            
      - name: Cleanup artifacts Win
        if: matrix.os == 'windows-2019'
        run: |
          mkdir artifacts
          mv applications/electron/dist/*.exe artifacts

      - name: Upload dist(Linux & Mac)
        if: matrix.os != 'windows-2019'
        uses: actions/upload-artifact@v3
        with:
          name: Scribe
          path: applications/electron/dist

      - name: Upload artifacts(Windows)
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v3
        with:
          name: Scribe
          path: artifacts

      - name: List artifacts-Linux
        if: matrix.os != 'windows-2019'
        run: |
          ls -R applications/electron/dist

      - name: List artifacts-Windows
        if: matrix.os == 'windows-2019'
        run: |
          dir artifacts